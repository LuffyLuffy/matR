quit()
library(help=qvalue)
??qvalue
library(ape)
?unlink(t)
x <- c ("4445567.3", "4445568.3")
y <- "4445569.3;4445570.3"
z <- "4445571.3  4445572.3"
scrubIds ( c (x,y,z))
library(matR)
x <- c ("4445567.3", "4445568.3")
y <- "4445569.3;4445570.3"
z <- "4445571.3  4445572.3"
scrubIds ( c (x,y,z))
print(.Last.value)
scrapeRes(.Last.value)
B <- scrubsIds ("mgp101 mgp102 mgp103 mgp104 mgp105")
B
B <- scrubIds ("mgp101 mgp102 mgp103 mgp104 mgp105")
B
scrapeRes(B)
scrapeRes ("101")
mListAll
mListAll("library")
scrapeRes ("mgl54248 mgl54250")
l <- "mgl54248 mgl54250 mgl54252 mgl54254"
scrapeRes (l)
scrapeRes (scrubIds (l))
x <- c ("4445567.3", "4445568.3")
y <- "4445569.3;4445570.3"
z <- "4445571.3 mgp101 4445572.3"
A <- scrubIds ( c (x,y,z))
A
C <- scrubIds ("10;11;12", res = "project")
C
mListAll("sample")
D <- scrubIds (c (22817, 22818, 22819), res = "samp")
D
x <- c ("4445567.3", "4445568.3")
y <- "4445569.3;4445570.3"
z <- "4445571.3 mgp101 4445572.3"
A <- scrubIds ( c (x,y,z))
B <- scrubIds ("mgp101 mgp102 mgp103 mgp104 mgp105")
C <- scrubIds ("101;102;103", res = "project")
D <- scrubIds (c (22817, 22818, 22819), res = "samp")
scrapeRes (A)
scrapeRes (B)
scrapeRes (C)
scrapeRes (D)
l <- "mgl54248 mgl54250 mgl54252 mgl54254"
scrapeRes (l)
scrapeRes (scrubIds (l))
utils::example(orgMatrix)
s <- paste ("project/", c (10, 11, 12))
s
mListAll("library")
callRaw ("library/mgl53826", toFile = t)
.mCallRaw ("library/mgl53826", toFile = t)
.mCallRaw ("library/mgl53826")
selection ("mgp101 mgp102")
18/39
library(matR)
?dist
dist
mdist
a <- c(2,0,7,0,8)
b <- c(1,5,0,0,16)
mdist(a,b)
mdist(matrix(c(a,b),ncol=2))
matrix(c(a,b),ncol=2)
ecodist::dist
ecodist::distane
ecodist::distance
?apply
ecodist::distance(matrix(c(a,b,ncol=2)))
ecodist::distance(t(matrix(c(a,b,ncol=2)))
)
t(matrix(c(a,b,ncol=2)))
t(matrix(c(a,b),ncol=2))
ecodist::distance(t(matrix(c(a,b),ncol=2)))
mdsit
mdist
m <- matrix(c(a,b),ncol=2)
m
library(ecodist)
distance(m)
distance(t(m))
?distance
t(m)
?dist
distance(t(m),method="bray-curtis")
distance(m,method="bray-curtis")
??"bray-curtis"
bcdist(t(m))
libray(vegan)
library(vegan)
?vegdist
t(m)
vegdist(t(m))
fname <- "/Users/dan/Desktop/EHFI.all_OTU.m5RNA.raw.12-12-11.data"
?read.table
x <- read.table(fname, row.names = TRUE, colnames = TRUE, sep = "\t")
x <- read.table(fname, row.names = TRUE, col.names = TRUE, sep = "\t")
x <- read.table(fname, row.names = 1, col.names = TRUE, sep = "\t")
x <- read.table(fname, row.names = 1, col.names = TRUE, sep = "\t", quote = "")
x <- read.table(fname, sep = "\t")
x <- read.table(fname, row.names = 1, sep = "\t", quote = "")
x
names(x
)
x <- read.table(fname, header=TRUE,row.names = 1, sep = "\t", quote = "")
names(x)
length(rownames(x))
x <- read.delim(fname, quote="")
names(x)
x <- read.table(fname, header=TRUE,sep = "\t", quote = "")
rownames(x)[1]
x <- read.table(fname, header=TRUE,row.names = 1, sep = "\t", quote = "")
rownames(x)[1]
x <- read.table(fname, header=TRUE, row.names = 1, sep = "\t", quote = "")
x
metadata
showMethods("metadata")
?vegist
?vegdist
?ls(2)
ls(2)
ls(3)
ls(4)
buildHTMLDocs
?Rd2HTML
?tools::Rd2HTML
tools::Rd2HTML("")
m
rm(list=c("m"))
rm(list=c("x","a","b","fname"))
ls
getwd()
setwd("~/Desktop/DEVEL/braithwaite-matR/R")
ls()
f <- function (x=c("alpha","beta")) {x}
f("foo")
f("al")
f(x="al")
?pmatch
?argmatch
match.arg
?match.arg
f
f <- function (x=c("alpha","beta")) {match.arg(x)}
f('foo')
f("al")
?match.fun
?match.call
f<-function(resources = c ("project", "library", "sample", "metagenome")) {match.arg(resources,sev=TRUE)}
f(c("p","l"))
f(c("p","l","l"))
f(c("p","l","l", "f"))
f(c("p","l","l", "gg"))
f(c("aap","l","l", "gg"))
c (foo="poo")
.Last.value["foo"]
c (project = "mgp", library = "mgl", sample = "mgs", metagenome = "mgm") [f(c("p","l","l"))]
scrubIds <- function (ids, resources = c ("project", "library", "sample", "metagenome"))) {
ids <- strsplit (paste (ids, collapse = " "), "[^[:alnum:]\\.]+") [[1]]
resources <- rep (
c (project = "mgp", library = "mgl", sample = "mgs", metagenome = "mgm")
[match.arg (resources, several.ok = TRUE)],
length.out = length (ids))
ifelse (substr (ids, 1, 3) %in% c ("mgp", "mgl", "mgs", "mgm"), ids, paste (resources, ids, sep = ""))
}
scrubIds <- function (ids, resources = c ("project", "library", "sample", "metagenome")) {
ids <- strsplit (paste (ids, collapse = " "), "[^[:alnum:]\\.]+") [[1]]
resources <- rep (
c (project = "mgp", library = "mgl", sample = "mgs", metagenome = "mgm")
[match.arg (resources, several.ok = TRUE)],
length.out = length (ids))
ifelse (substr (ids, 1, 3) %in% c ("mgp", "mgl", "mgs", "mgm"), ids, paste (resources, ids, sep = ""))
}
x <- c ("4445567.3", "4445568.3")
y <- "4445569.3;4445570.3"
z <- "4445571.3 mgp101 4445572.3"
A <- scrubIds ( c (x,y,z))
B <- scrubIds ("mgp101 mgp102 mgp103 mgp104 mgp105")
C <- scrubIds ("101;102;103", res = "project")
D <- scrubIds (c (22817, 22818, 22819), res = "samp")
A;
B
C
D
?missing
scrubIds <- function (ids, resources = c ("project", "library", "sample", "metagenome")) {
ids <- strsplit (paste (ids, collapse = " "), "[^[:alnum:]\\.]+") [[1]]
if (missing (resources)) resources <- "metagenome"
resources <- rep (
c (project = "mgp", library = "mgl", sample = "mgs", metagenome = "mgm")
[match.arg (resources, several.ok = TRUE)],
length.out = length (ids))
ifelse (substr (ids, 1, 3) %in% c ("mgp", "mgl", "mgs", "mgm"), ids, paste (resources, ids, sep = ""))
}
scrubIds <- function (ids, resources = c ("project", "library", "sample", "metagenome")) {
ids <- strsplit (paste (ids, collapse = " "), "[^[:alnum:]\\.]+") [[1]]
if (missing (resources)) resources <- "metagenome"
resources <- rep (
c (project = "mgp", library = "mgl", sample = "mgs", metagenome = "mgm")
[match.arg (resources, several.ok = TRUE)],
length.out = length (ids))
ifelse (substr (ids, 1, 3) %in% c ("mgp", "mgl", "mgs", "mgm"), ids, paste (resources, ids, sep = ""))
}
scrubIds <- function (ids, resources = c ("project", "library", "sample", "metagenome")) {
ids <- strsplit (paste (ids, collapse = " "), "[^[:alnum:]\\.]+") [[1]]
if (missing (resources)) resources <- "metagenome"
resources <- rep (
c (project = "mgp", library = "mgl", sample = "mgs", metagenome = "mgm")
[match.arg (resources, several.ok = TRUE)],
length.out = length (ids))
ifelse (substr (ids, 1, 3) %in% c ("mgp", "mgl", "mgs", "mgm"), ids, paste (resources, ids, sep = ""))
}
x <- c ("4445567.3", "4445568.3")
y <- "4445569.3;4445570.3"
z <- "4445571.3 mgp101 4445572.3"
A <- scrubIds ( c (x,y,z))
B <- scrubIds ("mgp101 mgp102 mgp103 mgp104 mgp105")
C <- scrubIds ("101;102;103", res = "project")
D <- scrubIds (c (22817, 22818, 22819), res = "samp")
a
b
A
B
C
D
fix(D)
fix
?fix
fix(D)
search()
library(matR)
ls(1)
search()
search(2)
ls(2)
rm(scrubIds)
find(scrubIds)
find("scrubIds")
?callRaw
?mListAllIds
?mListAllIds
?callRaw
?Identifiers
?math.arg
?match.arg
match.arg(foo)
ls()
match.arg(A)
A
z
?mGet
fix(x)
?match.arg
class(switch)
type(switch)
typeof(switch)
switch
package?matR
library(matR)
package?matR
ls()
search()
detach(2)
library(matR)
package?matR
q()
